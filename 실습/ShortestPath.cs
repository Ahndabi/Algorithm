using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace 실습
{
	internal class ShortestPath
	{
		// 1. 자료구조 시각화 사이트에서 그래프 캡쳐
		// 2. 손으로 직접 순서대로 다익스트라 알고리즘 굴려보기

		/*			
		 ****************0부터 시작!*****************
		 * 0에서 갈 수 있는 정점은 총 3개. -> 1, 2, 4
		 *		distance	path
		 * 0	  0			0
		 * 1	  2			0
		 * 2	  8			0
		 * 3	 INF		X
		 * 4	  3			0
		 * 5	 INF		X
		 * 6	 INF		X
		 * 7	 INF		X
		 * 
		 * 
		 * 가장 빠른 길은 1로 가는길이니, 1부터 탐색한다.
		 * 1에서 갈 수 있는 정점은 총 3개. -> 0, 2, 3 
		 * 0	  2			1  -> 갱신 X
		 * 2	  3			1  -> 갱신 O
		 * 3	  6			1  -> 갱신 0
		 * 
		 *		<갱신반영>
		 *		distance	path
		 * 0	  0			0	-> 방문0
		 * 1	  2			0	-> 방문0
		 * 2	  3			1
		 * 3	  6			1
		 * 4	  3			0
		 * 5	 INF		X
		 * 6	 INF		X
		 * 7	 INF		X
		 * 
		 * 
		 * 그 다음 2가 가장 빠르므로, 2에서 탐색한다.
		 * 2에서 갈 수 있는 정점은 총 3개. -> 0, 1, 6
		 * 0	  8			2  -> 갱신 X
		 * 1	  9			2  -> 갱신 X
		 * 6	  15		2  -> 갱신 O
		 * 
		 *		<갱신반영>
		 *		distance	path
		 * 0	  0			0	-> 방문0
		 * 1	  2			0	-> 방문0
		 * 2	  3			1	-> 방문0
		 * 3	  6			1
		 * 4	  3			0
		 * 5	 INF		X
		 * 6	  15		2
		 * 7	 INF		X
		 * 
		 * 
		 * 그 다음은 4에서 탐색한다.
		 * 4에서 갈 수 있는 정점은 총 2개. -> 0, 6
		 * 0	  3			4	-> 갱신X
		 * 6	  5			4	-> 갱신0
		 * 
		 *		<갱신반영>
		 *		distance	path
		 * 0	  0			0	-> 방문0
		 * 1	  2			0	-> 방문0
		 * 2	  3			1	-> 방문0
		 * 3	  6			1
		 * 4	  3			0	-> 방문0
		 * 5	 INF		X
		 * 6	  5			4
		 * 7	 INF		X
		 * 
		 * 
		 * 그 다음 6에서 탐색한다. 
		 * 6에서 갈 수 있는 정점은 총 2개 -> 5, 7
		 * 5	  7			6	-> 갱신0
		 * 7	  7			6	-> 갱신0
		 * 
		 *		<갱신반영>
		 *		distance	path
		 * 0	  0			0	-> 방문0
		 * 1	  2			0	-> 방문0
		 * 2	  3			1	-> 방문0
		 * 3	  6			1
		 * 4	  3			0	-> 방문0
		 * 5	  7		    6	
		 * 6	  5			4	-> 방문0
		 * 7	  7			6
		 * 
		 * 
		 * 그 다음 3에서 탐색한다.
		 * 3에서 갈 수 있는 정점은 총 1개. -> 7
		 * 7	  15		3	-> 갱신X
		 * 
		 *		<갱신반영>
		 *		distance	path
		 * 0	  0			0	-> 방문0
		 * 1	  2			0	-> 방문0
		 * 2	  3			1	-> 방문0
		 * 3	  6			1	-> 방문0
		 * 4	  3			0	-> 방문0
		 * 5	  7		    6	
		 * 6	  5			4	-> 방문0
		 * 7	  7			6
		 * 
		 * 
		 * 그 다음 5에서 탐색한다.
		 * 5에서 갈 수 있는 정점은 총 2개. -> 6, 7
		 * 6	  9			5	-> 갱신X
		 * 7	  14		5	-> 갱신X
		 * 
		 *		<갱신반영>
		 *		distance	path
		 * 0	  0			0	-> 방문0
		 * 1	  2			0	-> 방문0
		 * 2	  3			1	-> 방문0
		 * 3	  6			1	-> 방문0
		 * 4	  3			0	-> 방문0
		 * 5	  7		    6	-> 방문0
		 * 6	  5			4	-> 방문0
		 * 7	  7			6
		 * 
		 * 
		 * 그 다음 7에서 탐색한다.
		 * 7에서 갈 수 있는 정점은 총 3개. -> 3, 5, 6
		 * 3	  16		7	-> 갱신X
		 * 5	  12		7	-> 갱신X
		 * 6	  9			7	-> 갱신X
		 * 
		 *		<갱신반영>
		 *		distance	path
		 * 0	  0			0	-> 방문0
		 * 1	  2			0	-> 방문0
		 * 2	  3			1	-> 방문0
		 * 3	  6			1	-> 방문0
		 * 4	  3			0	-> 방문0
		 * 5	  7		    6	-> 방문0
		 * 6	  5			4	-> 방문0
		 * 7	  7			6	-> 방문0
		 * 
		 * 
		 * 
		 *		<결론>
		 * 0	-> 0
		 * 1	-> 0 1
		 * 2	-> 0 1 2
		 * 3	-> 0 1 3
		 * 4	-> 0 4
		 * 5	-> 0 4 6 5
		 * 6	-> 0 4 6
		 * 7	-> 0 4 6 7
		 * 
		 * 
		 */

	}
}
